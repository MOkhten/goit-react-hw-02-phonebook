{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: ''\n    };\n  }\n\n  render() {\n    const FriendList = _ref => {\n      let {\n        friends,\n        onToggleCompleted\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"TodoList\",\n        children: todos.map(_ref2 => {\n          let {\n            id,\n            text,\n            completed\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classNames('TodoList__item', {\n              'TodoList__item--completed': completed\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"TodoList__checkbox\",\n              checked: completed,\n              onChange: () => onToggleCompleted(id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"TodoList__text\",\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"TodoList__btn\",\n              onClick: () => onDeleteTodo(id),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 9\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 3\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n      title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["Component","App","state","contacts","name","render","FriendList","friends","onToggleCompleted","todos","map","id","text","completed","classNames","onDeleteTodo"],"mappings":";AACA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,OAAO,MAAMC,GAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAChCE,KADgC,GACxB;AACVC,MAAAA,QAAQ,EAAE,EADA;AAEVC,MAAAA,IAAI,EAAE;AAFI,KADwB;AAAA;;AAOlCC,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG;AAAA,UAAC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAD;AAAA,0BACvB;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,kBACGC,KAAK,CAACC,GAAN,CAAU;AAAA,cAAC;AAAEC,YAAAA,EAAF;AAAMC,YAAAA,IAAN;AAAYC,YAAAA;AAAZ,WAAD;AAAA,8BACT;AAEE,YAAA,SAAS,EAAEC,UAAU,CAAC,gBAAD,EAAmB;AACtC,2CAA6BD;AADS,aAAnB,CAFvB;AAAA,oCAME;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,SAAS,EAAC,oBAFZ;AAGE,cAAA,OAAO,EAAEA,SAHX;AAIE,cAAA,QAAQ,EAAE,MAAML,iBAAiB,CAACG,EAAD;AAJnC;AAAA;AAAA;AAAA;AAAA,oBANF,eAYE;AAAG,cAAA,SAAS,EAAC,gBAAb;AAAA,wBAA+BC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAZF,eAaE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,eAFZ;AAGE,cAAA,OAAO,EAAE,MAAMG,YAAY,CAACJ,EAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA,aACOA,EADP;AAAA;AAAA;AAAA;AAAA,kBADS;AAAA,SAAV;AADH;AAAA;AAAA;AAAA;AAAA,cADuB;AAAA,KAAnB;;AA4BA,wBAEG;AACP,MAAA,IAAI,EAAC,MADE;AAEP,MAAA,IAAI,EAAC,MAFE;AAGP,MAAA,OAAO,EAAC,wHAHD;AAIP,MAAA,KAAK,EAAC,wIAJC;AAKP,MAAA,QAAQ;AALD;AAAA;AAAA;AAAA;AAAA,YAFH;AAUD;;AA9C+B","sourcesContent":["\r\nimport { Component } from \"react\";\r\n\r\nexport class App  extends Component {\r\n    state = {\r\n  contacts: [],\r\n  name: ''\r\n};\r\n  \r\n  \r\n  render() {\r\n      const FriendList = ({ friends, onToggleCompleted }) => (\r\n  <ul className=\"TodoList\">\r\n    {todos.map(({ id, text, completed }) => (\r\n      <li\r\n        key={id}\r\n        className={classNames('TodoList__item', {\r\n          'TodoList__item--completed': completed,\r\n        })}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"TodoList__checkbox\"\r\n          checked={completed}\r\n          onChange={() => onToggleCompleted(id)}\r\n        />\r\n        <p className=\"TodoList__text\">{text}</p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoList__btn\"\r\n          onClick={() => onDeleteTodo(id)}\r\n        >\r\n          Удалить\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\n      return (\r\n        \r\n         <input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n  required\r\n/>\r\n       )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}