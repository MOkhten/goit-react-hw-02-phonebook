{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactList\\\\ContactList.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactList = _ref => {\n  let {\n    contacts\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: contacts.map(_ref2 => {\n      let {\n        id,\n        name,\n        number,\n        onDeleteContact\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: () => {\n            onDeleteContact(id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 7\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactList;\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-02-phonebook/src/components/ContactList/ContactList.jsx"],"names":["React","PropTypes","ContactList","contacts","map","id","name","number","onDeleteContact","propTypes","arrayOf","exact","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC7C,sBACI;AAAA,cAAMA,QAAQ,CAACC,GAAT,CAAa,SAA2C;AAAA,UAA1C;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA,MAAZ;AAAoBC,QAAAA;AAApB,OAA0C;AAC1D,0BACA;AAAA,gCACK;AAAA,oBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADL,eAEF;AAAA,oBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFE,eAGF,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAE,MAAM;AACbC,YAAAA,eAAe,CAACH,EAAD,CAAf;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHE;AAAA,SAAUA,EAAV;AAAA;AAAA;AAAA;AAAA,cADA;AAcD,KAfG;AAAN;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBC,CApBM;KAAMH,W;AAsBbA,WAAW,CAACO,SAAZ,GAAwB;AACvBN,EAAAA,QAAQ,EAAEF,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,KAAV,CAAgB;AACrCN,IAAAA,EAAE,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UADgB;AAErCP,IAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAFc;AAGrCN,IAAAA,MAAM,EAAEN,SAAS,CAACW,MAAV,CAAiBC;AAHY,GAAhB,CAAlB;AADa,CAAxB","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ContactList = ({ contacts }) => {\r\nreturn (\r\n    <ul >{contacts.map(({ id, name, number, onDeleteContact }) => {\r\n        return (\r\n        <li key ={id}>\r\n             <p>{name}</p>\r\n      <p>{number}</p>\r\n      <Button\r\n        type=\"button\"\r\n        onClick={() => {\r\n          onDeleteContact(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </Button>\r\n        </li>\r\n );\r\n      })}\r\n    </ul >\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n contacts: PropTypes.arrayOf(PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired, \r\n    })),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}