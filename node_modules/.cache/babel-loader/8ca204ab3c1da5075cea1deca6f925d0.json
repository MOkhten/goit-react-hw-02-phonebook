{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        contacts\n      } = this.props;\n      const {\n        name\n      } = this.state;\n      this.props.onSubmit(this.state);\n    };\n\n    this.visibleContacts = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      const normalized = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(normalized));\n    };\n  }\n\n  render() {\n    const visibleContacts = thi;\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"TodoEditor\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        onChange: this.handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: number,\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        onChange: this.handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"TodoEditor__button\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nContactForm.defaultProps = {\n  onSubmit: PropTypes.func.isRequired,\n  contact: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string\n  })).isRequired\n};","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","Component","PropTypes","ContactForm","state","name","number","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","contacts","props","onSubmit","visibleContacts","filter","normalized","toLowerCase","contact","includes","render","thi","defaultProps","func","isRequired","arrayOf","shape","id","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAWvCG,KAXuC,GAW/B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAX+B;;AAAA,SAgBvCC,YAhBuC,GAgBxBC,CAAC,IAAI;AAChB,YAAM;AAAEH,QAAAA,IAAF;AAAQI,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AACA,WAAKC,QAAL,CAAc;AACV,SAACN,IAAD,GAAQI;AADE,OAAd;AAGH,KArBsC;;AAAA,SAuBvCG,YAvBuC,GAuBxBJ,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACK,cAAF;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;AACA,YAAM;AAAEV,QAAAA;AAAF,UAAW,KAAKD,KAAtB;AAEA,WAAKW,KAAL,CAAWC,QAAX,CAAoB,KAAKZ,KAAzB;AACH,KA7BsC;;AAAA,SA+BvCa,eA/BuC,GA+BrB,MAAM;AACxB,YAAM;AAAEH,QAAAA,QAAF;AAAYI,QAAAA;AAAZ,UAAuB,KAAKd,KAAlC;AACA,YAAMe,UAAU,GAAGD,MAAM,CAACE,WAAP,EAAnB;AACA,aAAON,QAAQ,CAACI,MAAT,CAAgBG,OAAO,IAAIA,OAAO,CAAChB,IAAR,CAAae,WAAb,GAA2BE,QAA3B,CAAoCH,UAApC,CAA3B,CAAP;AACD,KAnCwC;AAAA;;AAqCvCI,EAAAA,MAAM,GAAG;AACL,UAAMN,eAAe,GAAGO,GAAxB;AACA,UAAM;AAAEnB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AACA,wBACI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAE,KAAKQ,YAA5C;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,KAAK,EAAEP,IADX;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,OAAO,EAAC,wHAJZ;AAKI,QAAA,KAAK,EAAC,wIALV;AAMI,QAAA,QAAQ,EAAE,KAAKE,YANnB;AAQI,QAAA,QAAQ;AARZ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AACI,QAAA,KAAK,EAAED,MADX;AAEI,QAAA,IAAI,EAAC,KAFT;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,OAAO,EAAC,wFAJZ;AAKI,QAAA,KAAK,EAAC,8FALV;AAMI,QAAA,QAAQ,EAAE,KAAKC,YANnB;AAOI,QAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,cAZJ,eAoBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BH;;AAlEsC;AAA9BJ,W,CACFsB,Y,GAAe;AACtBT,EAAAA,QAAQ,EAAEd,SAAS,CAACwB,IAAV,CAAeC,UADH;AAEtBN,EAAAA,OAAO,EAAEnB,SAAS,CAAC0B,OAAV,CACP1B,SAAS,CAAC2B,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAE5B,SAAS,CAAC6B,MADA;AAEd1B,IAAAA,IAAI,EAAEH,SAAS,CAAC6B,MAFF;AAGdzB,IAAAA,MAAM,EAAEJ,SAAS,CAAC6B;AAHJ,GAAhB,CADO,EAMPJ;AARoB,C","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class ContactForm extends Component {\r\n    static defaultProps = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    contact: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n      })\r\n    ).isRequired,\r\n  };\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { contacts } = this.props;\r\n        const { name } = this.state;\r\n\r\n        this.props.onSubmit(this.state);\r\n    };\r\n\r\n    visibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalized = filter.toLowerCase();\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalized));\r\n  };\r\n\r\n    render() {\r\n        const visibleContacts = thi\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\r\n                <h2>Name</h2>\r\n                <input\r\n                    value={name}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                    onChange={this.handleChange}\r\n          \r\n                    required />\r\n                <h2>Number</h2>\r\n                <input\r\n                    value={number}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                    onChange={this.handleChange}\r\n                    required />\r\n                <button type=\"submit\" className=\"TodoEditor__button\">\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}