{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: ''\n    };\n  }\n\n  render() {\n    const FriendList = _ref => {\n      let {\n        friends,\n        onToggleCompleted\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"FriendList\",\n        children: friends.map(_ref2 => {\n          let {\n            id,\n            name\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classNames('TodoList__item'),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n              title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"TodoList__btn\",\n              onClick: () => onDeleteTodo(id),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 9\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 3\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n      title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["Component","App","state","contacts","name","render","FriendList","friends","onToggleCompleted","map","id","classNames","onDeleteTodo"],"mappings":";AACA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,OAAO,MAAMC,GAAN,SAAmBD,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAChCE,KADgC,GACxB;AACVC,MAAAA,QAAQ,EAAE,EADA;AAEVC,MAAAA,IAAI,EAAE;AAFI,KADwB;AAAA;;AAOlCC,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG;AAAA,UAAC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAD;AAAA,0BACvB;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGD,OAAO,CAACE,GAAR,CAAY;AAAA,cAAC;AAAEC,YAAAA,EAAF;AAAMN,YAAAA;AAAN,WAAD;AAAA,8BACX;AAEE,YAAA,SAAS,EAAEO,UAAU,CAAC,gBAAD,CAFvB;AAAA,oCAIE;AACA,cAAA,IAAI,EAAC,MADL;AAED,cAAA,IAAI,EAAC,MAFJ;AAGA,cAAA,OAAO,EAAC,wHAHR;AAIA,cAAA,KAAK,EAAC,wIAJN;AAKA,cAAA,QAAQ;AALR;AAAA;AAAA;AAAA;AAAA,oBAJF,eAYE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,EAAC,eAFZ;AAGE,cAAA,OAAO,EAAE,MAAMC,YAAY,CAACF,EAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA,aACOA,EADP;AAAA;AAAA;AAAA;AAAA,kBADW;AAAA,SAAZ;AADH;AAAA;AAAA;AAAA;AAAA,cADuB;AAAA,KAAnB;;AA2BA,wBAEG;AACP,MAAA,IAAI,EAAC,MADE;AAEP,MAAA,IAAI,EAAC,MAFE;AAGP,MAAA,OAAO,EAAC,wHAHD;AAIP,MAAA,KAAK,EAAC,wIAJC;AAKP,MAAA,QAAQ;AALD;AAAA;AAAA;AAAA;AAAA,YAFH;AAUD;;AA7C+B","sourcesContent":["\r\nimport { Component } from \"react\";\r\n\r\nexport class App  extends Component {\r\n    state = {\r\n  contacts: [],\r\n  name: ''\r\n};\r\n  \r\n  \r\n  render() {\r\n      const FriendList = ({ friends, onToggleCompleted }) => (\r\n  <ul className=\"FriendList\">\r\n    {friends.map(({ id, name }) => (\r\n      <li\r\n        key={id}\r\n        className={classNames('TodoList__item')}\r\n      >\r\n        <input\r\n        type=\"text\"\r\n       name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n/>\r\n        \r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoList__btn\"\r\n          onClick={() => onDeleteTodo(id)}\r\n        >\r\n          Удалить\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\n      return (\r\n        \r\n         <input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n  required\r\n/>\r\n       )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}